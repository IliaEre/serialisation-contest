// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package sample

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type ValidateRequest struct {
	_tab flatbuffers.Table
}

func GetRootAsValidateRequest(buf []byte, offset flatbuffers.UOffsetT) *ValidateRequest {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &ValidateRequest{}
	x.Init(buf, n+offset)
	return x
}

func FinishValidateRequestBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	builder.Finish(offset)
}

func GetSizePrefixedRootAsValidateRequest(buf []byte, offset flatbuffers.UOffsetT) *ValidateRequest {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &ValidateRequest{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func FinishSizePrefixedValidateRequestBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	builder.FinishSizePrefixed(offset)
}

func (rcv *ValidateRequest) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *ValidateRequest) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *ValidateRequest) Document(obj *Document) *Document {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		x := rcv._tab.Indirect(o + rcv._tab.Pos)
		if obj == nil {
			obj = new(Document)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func ValidateRequestStart(builder *flatbuffers.Builder) {
	builder.StartObject(1)
}
func ValidateRequestAddDocument(builder *flatbuffers.Builder, document flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(document), 0)
}
func ValidateRequestEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
